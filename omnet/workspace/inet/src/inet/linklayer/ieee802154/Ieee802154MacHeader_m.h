//
// Generated file, do not edit! Created by nedtool 5.6 from inet/linklayer/ieee802154/Ieee802154MacHeader.msg.
//

#ifndef __INET_IEEE802154MACHEADER_M_H
#define __INET_IEEE802154MACHEADER_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif


namespace inet {

class Ieee802154MacHeader;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/linklayer/base/MacHeaderBase_m.h" // import inet.linklayer.base.MacHeaderBase


namespace inet {

/**
 * Class generated from <tt>inet/linklayer/ieee802154/Ieee802154MacHeader.msg:33</tt> by nedtool.
 * <pre>
 * //
 * // A CSMA mac header format definition
 * //
 * // \@author Daniel Willkomm
 * //
 * class Ieee802154MacHeader extends MacHeaderBase
 * {
 *     long sequenceId; // Sequence Number to detect duplicate messages
 * }
 * </pre>
 */
class INET_API Ieee802154MacHeader : public ::inet::MacHeaderBase
{
  protected:
    long sequenceId = 0;

  private:
    void copy(const Ieee802154MacHeader& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Ieee802154MacHeader&);

  public:
    Ieee802154MacHeader();
    Ieee802154MacHeader(const Ieee802154MacHeader& other);
    virtual ~Ieee802154MacHeader();
    Ieee802154MacHeader& operator=(const Ieee802154MacHeader& other);
    virtual Ieee802154MacHeader *dup() const override {return new Ieee802154MacHeader(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual long getSequenceId() const;
    virtual void setSequenceId(long sequenceId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Ieee802154MacHeader& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Ieee802154MacHeader& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_IEEE802154MACHEADER_M_H

